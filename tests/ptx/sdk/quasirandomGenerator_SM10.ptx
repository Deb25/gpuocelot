	.version 1.3
	.target sm_10, map_f64_to_f32
	// compiled with /home/normal/cuda/open64/lib//be
	// nvopencc built on 2008-11-07

	.reg .u32 %ra<17>;
	.reg .u64 %rda<17>;
	.reg .f32 %fa<17>;
	.reg .f64 %fda<17>;
	.reg .u32 %rv<5>;
	.reg .u64 %rdv<5>;
	.reg .f32 %fv<5>;
	.reg .f64 %fdv<5>;


	//-----------------------------------------------------------
	// Compiling quasirandomGenerator_SM10.cpp3.i (/tmp/ccBI#.GQ2ZDI)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"<command-line>"
	.file	2	"quasirandomGenerator_SM10.cudafe2.gpu"
	.file	3	"/usr/lib/gcc/x86_64-linux-gnu/4.2.4/include/stddef.h"
	.file	4	"/home/normal/cuda/bin/../include/crt/device_runtime.h"
	.file	5	"/home/normal/cuda/bin/../include/host_defines.h"
	.file	6	"/home/normal/cuda/bin/../include/builtin_types.h"
	.file	7	"/home/normal/cuda/bin/../include/device_types.h"
	.file	8	"/home/normal/cuda/bin/../include/driver_types.h"
	.file	9	"/home/normal/cuda/bin/../include/texture_types.h"
	.file	10	"/home/normal/cuda/bin/../include/vector_types.h"
	.file	11	"/home/normal/cuda/bin/../include/device_launch_parameters.h"
	.file	12	"/home/normal/cuda/bin/../include/crt/storage_class.h"
	.file	13	"/usr/include/bits/types.h"
	.file	14	"/usr/include/time.h"
	.file	15	"realtype.h"
	.file	16	"quasirandomGenerator_kernel.cuh"
	.file	17	"/home/normal/cuda/bin/../include/common_functions.h"
	.file	18	"/home/normal/cuda/bin/../include/crt/func_macro.h"
	.file	19	"/home/normal/cuda/bin/../include/math_functions.h"
	.file	20	"/home/normal/cuda/bin/../include/device_functions.h"
	.file	21	"/home/normal/cuda/bin/../include/math_constants.h"
	.file	22	"/home/normal/cuda/bin/../include/sm_11_atomic_functions.h"
	.file	23	"/home/normal/cuda/bin/../include/sm_12_atomic_functions.h"
	.file	24	"/home/normal/cuda/bin/../include/sm_13_double_functions.h"
	.file	25	"/home/normal/cuda/bin/../include/texture_fetch_functions.h"
	.file	26	"/home/normal/cuda/bin/../include/math_functions_dbl_ptx1.h"

	.const .align 4 .b8 c_Table[372];

	.entry _Z26quasirandomGeneratorKernelPfjj
	{
	.reg .u32 %r<140>;
	.reg .u64 %rd<12>;
	.reg .f32 %f<5>;
	.reg .pred %p<35>;
	.param .u64 __cudaparm__Z26quasirandomGeneratorKernelPfjj_d_Output;
	.param .u32 __cudaparm__Z26quasirandomGeneratorKernelPfjj_seed;
	.param .u32 __cudaparm__Z26quasirandomGeneratorKernelPfjj_N;
	.loc	16	63	0
$LBB1__Z26quasirandomGeneratorKernelPfjj:
	.loc	16	69	0
	cvt.u32.u16 	%r1, %ntid.x;    	// 
	cvt.u32.u16 	%r2, %ctaid.x;   	// 
	mul24.lo.u32 	%r3, %r1, %r2;  	// 
	cvt.u32.u16 	%r4, %tid.x;     	// 
	add.u32 	%r5, %r4, %r3;       	// 
	mov.s32 	%r6, %r5;            	// 
	ld.param.u32 	%r7, [__cudaparm__Z26quasirandomGeneratorKernelPfjj_N];	// id:43 __cudaparm__Z26quasirandomGeneratorKernelPfjj_N+0x0
	setp.ge.u32 	%p1, %r5, %r7;   	// 
	@%p1 bra 	$Lt_0_12;           	// 
	cvt.u32.u16 	%r8, %tid.y;     	// 
	mov.u64 	%rd1, c_Table;       	// 
	cvt.u64.u32 	%rd2, %r8;       	// 
	mul.lo.u64 	%rd3, %rd2, 124;  	// 
	add.u64 	%rd4, %rd1, %rd3;    	// 
	ld.param.u32 	%r9, [__cudaparm__Z26quasirandomGeneratorKernelPfjj_seed];	// id:47 __cudaparm__Z26quasirandomGeneratorKernelPfjj_seed+0x0
	add.u32 	%r10, %r9, %r5;      	// 
	mul24.lo.u32 	%r11, %r8, %r7; 	// 
	cvt.u32.u16 	%r12, %nctaid.x; 	// 
	mul24.lo.u32 	%r13, %r1, %r12;	// 
	cvt.s64.u32 	%rd5, %r13;      	// 
	mul.lo.u64 	%rd6, %rd5, 4;    	// 
	ld.param.u64 	%rd7, [__cudaparm__Z26quasirandomGeneratorKernelPfjj_d_Output];	// id:49 __cudaparm__Z26quasirandomGeneratorKernelPfjj_d_Output+0x0
	add.u32 	%r14, %r11, %r5;     	// 
	cvt.u64.u32 	%rd8, %r14;      	// 
	mul.lo.u64 	%rd9, %rd8, 4;    	// 
	add.u64 	%rd10, %rd7, %rd9;   	// 
$Lt_0_14:
 //<loop> Loop body line 69
	and.b32 	%r15, %r10, 1;       	// 
	mov.u32 	%r16, 0;             	// 
	setp.eq.s32 	%p2, %r15, %r16; 	// 
	@%p2 bra 	$Lt_0_16;           	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	.loc	16	74	0
	ld.const.u32 	%r17, [%rd4+0]; 	// id:50 c_Table+0x0
	bra.uni 	$Lt_0_15;            	// 
$Lt_0_16:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	mov.u32 	%r17, 0;             	// 
$Lt_0_15:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r18, %r10, 30;      	// 
	shr.u32 	%r19, %r18, 31;      	// 
	mov.u32 	%r20, 0;             	// 
	setp.eq.s32 	%p3, %r19, %r20; 	// 
	@%p3 bra 	$Lt_0_17;           	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r21, [%rd4+4]; 	// id:51 c_Table+0x0
	xor.b32 	%r17, %r21, %r17;    	// 
$Lt_0_17:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r22, %r10, 29;      	// 
	shr.u32 	%r23, %r22, 31;      	// 
	mov.u32 	%r24, 0;             	// 
	setp.eq.s32 	%p4, %r23, %r24; 	// 
	@%p4 bra 	$Lt_0_19;           	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r25, [%rd4+8]; 	// id:52 c_Table+0x0
	xor.b32 	%r17, %r25, %r17;    	// 
$Lt_0_19:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r26, %r10, 28;      	// 
	shr.u32 	%r27, %r26, 31;      	// 
	mov.u32 	%r28, 0;             	// 
	setp.eq.s32 	%p5, %r27, %r28; 	// 
	@%p5 bra 	$Lt_0_21;           	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r29, [%rd4+12];	// id:53 c_Table+0x0
	xor.b32 	%r17, %r29, %r17;    	// 
$Lt_0_21:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r30, %r10, 27;      	// 
	shr.u32 	%r31, %r30, 31;      	// 
	mov.u32 	%r32, 0;             	// 
	setp.eq.s32 	%p6, %r31, %r32; 	// 
	@%p6 bra 	$Lt_0_23;           	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r33, [%rd4+16];	// id:54 c_Table+0x0
	xor.b32 	%r17, %r33, %r17;    	// 
$Lt_0_23:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r34, %r10, 26;      	// 
	shr.u32 	%r35, %r34, 31;      	// 
	mov.u32 	%r36, 0;             	// 
	setp.eq.s32 	%p7, %r35, %r36; 	// 
	@%p7 bra 	$Lt_0_25;           	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r37, [%rd4+20];	// id:55 c_Table+0x0
	xor.b32 	%r17, %r37, %r17;    	// 
$Lt_0_25:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r38, %r10, 25;      	// 
	shr.u32 	%r39, %r38, 31;      	// 
	mov.u32 	%r40, 0;             	// 
	setp.eq.s32 	%p8, %r39, %r40; 	// 
	@%p8 bra 	$Lt_0_27;           	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r41, [%rd4+24];	// id:56 c_Table+0x0
	xor.b32 	%r17, %r41, %r17;    	// 
$Lt_0_27:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r42, %r10, 24;      	// 
	shr.u32 	%r43, %r42, 31;      	// 
	mov.u32 	%r44, 0;             	// 
	setp.eq.s32 	%p9, %r43, %r44; 	// 
	@%p9 bra 	$Lt_0_29;           	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r45, [%rd4+28];	// id:57 c_Table+0x0
	xor.b32 	%r17, %r45, %r17;    	// 
$Lt_0_29:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r46, %r10, 23;      	// 
	shr.u32 	%r47, %r46, 31;      	// 
	mov.u32 	%r48, 0;             	// 
	setp.eq.s32 	%p10, %r47, %r48;	// 
	@%p10 bra 	$Lt_0_31;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r49, [%rd4+32];	// id:58 c_Table+0x0
	xor.b32 	%r17, %r49, %r17;    	// 
$Lt_0_31:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r50, %r10, 22;      	// 
	shr.u32 	%r51, %r50, 31;      	// 
	mov.u32 	%r52, 0;             	// 
	setp.eq.s32 	%p11, %r51, %r52;	// 
	@%p11 bra 	$Lt_0_33;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r53, [%rd4+36];	// id:59 c_Table+0x0
	xor.b32 	%r17, %r53, %r17;    	// 
$Lt_0_33:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r54, %r10, 21;      	// 
	shr.u32 	%r55, %r54, 31;      	// 
	mov.u32 	%r56, 0;             	// 
	setp.eq.s32 	%p12, %r55, %r56;	// 
	@%p12 bra 	$Lt_0_35;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r57, [%rd4+40];	// id:60 c_Table+0x0
	xor.b32 	%r17, %r57, %r17;    	// 
$Lt_0_35:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r58, %r10, 20;      	// 
	shr.u32 	%r59, %r58, 31;      	// 
	mov.u32 	%r60, 0;             	// 
	setp.eq.s32 	%p13, %r59, %r60;	// 
	@%p13 bra 	$Lt_0_37;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r61, [%rd4+44];	// id:61 c_Table+0x0
	xor.b32 	%r17, %r61, %r17;    	// 
$Lt_0_37:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r62, %r10, 19;      	// 
	shr.u32 	%r63, %r62, 31;      	// 
	mov.u32 	%r64, 0;             	// 
	setp.eq.s32 	%p14, %r63, %r64;	// 
	@%p14 bra 	$Lt_0_39;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r65, [%rd4+48];	// id:62 c_Table+0x0
	xor.b32 	%r17, %r65, %r17;    	// 
$Lt_0_39:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r66, %r10, 18;      	// 
	shr.u32 	%r67, %r66, 31;      	// 
	mov.u32 	%r68, 0;             	// 
	setp.eq.s32 	%p15, %r67, %r68;	// 
	@%p15 bra 	$Lt_0_41;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r69, [%rd4+52];	// id:63 c_Table+0x0
	xor.b32 	%r17, %r69, %r17;    	// 
$Lt_0_41:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r70, %r10, 17;      	// 
	shr.u32 	%r71, %r70, 31;      	// 
	mov.u32 	%r72, 0;             	// 
	setp.eq.s32 	%p16, %r71, %r72;	// 
	@%p16 bra 	$Lt_0_43;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r73, [%rd4+56];	// id:64 c_Table+0x0
	xor.b32 	%r17, %r73, %r17;    	// 
$Lt_0_43:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r74, %r10, 16;      	// 
	shr.u32 	%r75, %r74, 31;      	// 
	mov.u32 	%r76, 0;             	// 
	setp.eq.s32 	%p17, %r75, %r76;	// 
	@%p17 bra 	$Lt_0_45;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r77, [%rd4+60];	// id:65 c_Table+0x0
	xor.b32 	%r17, %r77, %r17;    	// 
$Lt_0_45:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r78, %r10, 15;      	// 
	shr.u32 	%r79, %r78, 31;      	// 
	mov.u32 	%r80, 0;             	// 
	setp.eq.s32 	%p18, %r79, %r80;	// 
	@%p18 bra 	$Lt_0_47;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r81, [%rd4+64];	// id:66 c_Table+0x0
	xor.b32 	%r17, %r81, %r17;    	// 
$Lt_0_47:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r82, %r10, 14;      	// 
	shr.u32 	%r83, %r82, 31;      	// 
	mov.u32 	%r84, 0;             	// 
	setp.eq.s32 	%p19, %r83, %r84;	// 
	@%p19 bra 	$Lt_0_49;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r85, [%rd4+68];	// id:67 c_Table+0x0
	xor.b32 	%r17, %r85, %r17;    	// 
$Lt_0_49:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r86, %r10, 13;      	// 
	shr.u32 	%r87, %r86, 31;      	// 
	mov.u32 	%r88, 0;             	// 
	setp.eq.s32 	%p20, %r87, %r88;	// 
	@%p20 bra 	$Lt_0_51;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r89, [%rd4+72];	// id:68 c_Table+0x0
	xor.b32 	%r17, %r89, %r17;    	// 
$Lt_0_51:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r90, %r10, 12;      	// 
	shr.u32 	%r91, %r90, 31;      	// 
	mov.u32 	%r92, 0;             	// 
	setp.eq.s32 	%p21, %r91, %r92;	// 
	@%p21 bra 	$Lt_0_53;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r93, [%rd4+76];	// id:69 c_Table+0x0
	xor.b32 	%r17, %r93, %r17;    	// 
$Lt_0_53:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r94, %r10, 11;      	// 
	shr.u32 	%r95, %r94, 31;      	// 
	mov.u32 	%r96, 0;             	// 
	setp.eq.s32 	%p22, %r95, %r96;	// 
	@%p22 bra 	$Lt_0_55;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r97, [%rd4+80];	// id:70 c_Table+0x0
	xor.b32 	%r17, %r97, %r17;    	// 
$Lt_0_55:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r98, %r10, 10;      	// 
	shr.u32 	%r99, %r98, 31;      	// 
	mov.u32 	%r100, 0;            	// 
	setp.eq.s32 	%p23, %r99, %r100;	// 
	@%p23 bra 	$Lt_0_57;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r101, [%rd4+84];	// id:71 c_Table+0x0
	xor.b32 	%r17, %r101, %r17;   	// 
$Lt_0_57:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r102, %r10, 9;      	// 
	shr.u32 	%r103, %r102, 31;    	// 
	mov.u32 	%r104, 0;            	// 
	setp.eq.s32 	%p24, %r103, %r104;	// 
	@%p24 bra 	$Lt_0_59;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r105, [%rd4+88];	// id:72 c_Table+0x0
	xor.b32 	%r17, %r105, %r17;   	// 
$Lt_0_59:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r106, %r10, 8;      	// 
	shr.u32 	%r107, %r106, 31;    	// 
	mov.u32 	%r108, 0;            	// 
	setp.eq.s32 	%p25, %r107, %r108;	// 
	@%p25 bra 	$Lt_0_61;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r109, [%rd4+92];	// id:73 c_Table+0x0
	xor.b32 	%r17, %r109, %r17;   	// 
$Lt_0_61:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r110, %r10, 7;      	// 
	shr.u32 	%r111, %r110, 31;    	// 
	mov.u32 	%r112, 0;            	// 
	setp.eq.s32 	%p26, %r111, %r112;	// 
	@%p26 bra 	$Lt_0_63;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r113, [%rd4+96];	// id:74 c_Table+0x0
	xor.b32 	%r17, %r113, %r17;   	// 
$Lt_0_63:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r114, %r10, 6;      	// 
	shr.u32 	%r115, %r114, 31;    	// 
	mov.u32 	%r116, 0;            	// 
	setp.eq.s32 	%p27, %r115, %r116;	// 
	@%p27 bra 	$Lt_0_65;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r117, [%rd4+100];	// id:75 c_Table+0x0
	xor.b32 	%r17, %r117, %r17;   	// 
$Lt_0_65:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r118, %r10, 5;      	// 
	shr.u32 	%r119, %r118, 31;    	// 
	mov.u32 	%r120, 0;            	// 
	setp.eq.s32 	%p28, %r119, %r120;	// 
	@%p28 bra 	$Lt_0_67;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r121, [%rd4+104];	// id:76 c_Table+0x0
	xor.b32 	%r17, %r121, %r17;   	// 
$Lt_0_67:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r122, %r10, 4;      	// 
	shr.u32 	%r123, %r122, 31;    	// 
	mov.u32 	%r124, 0;            	// 
	setp.eq.s32 	%p29, %r123, %r124;	// 
	@%p29 bra 	$Lt_0_69;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r125, [%rd4+108];	// id:77 c_Table+0x0
	xor.b32 	%r17, %r125, %r17;   	// 
$Lt_0_69:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r126, %r10, 3;      	// 
	shr.u32 	%r127, %r126, 31;    	// 
	mov.u32 	%r128, 0;            	// 
	setp.eq.s32 	%p30, %r127, %r128;	// 
	@%p30 bra 	$Lt_0_71;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r129, [%rd4+112];	// id:78 c_Table+0x0
	xor.b32 	%r17, %r129, %r17;   	// 
$Lt_0_71:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r130, %r10, 2;      	// 
	shr.u32 	%r131, %r130, 31;    	// 
	mov.u32 	%r132, 0;            	// 
	setp.eq.s32 	%p31, %r131, %r132;	// 
	@%p31 bra 	$Lt_0_73;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r133, [%rd4+116];	// id:79 c_Table+0x0
	xor.b32 	%r17, %r133, %r17;   	// 
$Lt_0_73:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	shl.b32 	%r134, %r10, 1;      	// 
	shr.u32 	%r135, %r134, 31;    	// 
	mov.u32 	%r136, 0;            	// 
	setp.eq.s32 	%p32, %r135, %r136;	// 
	@%p32 bra 	$Lt_0_75;          	// 
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	ld.const.u32 	%r137, [%rd4+120];	// id:80 c_Table+0x0
	xor.b32 	%r17, %r137, %r17;   	// 
$Lt_0_75:
 //<loop> Part of loop body line 69, head labeled $Lt_0_14
	.loc	16	76	0
	add.u32 	%r138, %r17, 1;      	// 
	cvt.rn.f32.u32 	%f1, %r138;   	// 
	mov.f32 	%f2, 0f30000000;     	// 4.65661e-10
	mul.f32 	%f3, %f1, %f2;       	// 
	st.global.f32 	[%rd10+0], %f3;	// id:81
	add.u32 	%r6, %r13, %r6;      	// 
	add.u64 	%rd10, %rd6, %rd10;  	// 
	add.u32 	%r10, %r10, %r13;    	// 
	setp.lt.u32 	%p33, %r6, %r7;  	// 
	@%p33 bra 	$Lt_0_14;          	// 
$Lt_0_12:
	.loc	16	78	0
	exit;                         	// 
$LDWend__Z26quasirandomGeneratorKernelPfjj:
	} // _Z26quasirandomGeneratorKernelPfjj

	.entry _Z16inverseCNDKernelPfS_j
	{
	.reg .u32 %r<30>;
	.reg .u64 %rd<17>;
	.reg .f32 %f<132>;
	.reg .pred %p<17>;
	.param .u64 __cudaparm__Z16inverseCNDKernelPfS_j_d_Output;
	.param .u64 __cudaparm__Z16inverseCNDKernelPfS_j_d_Input;
	.param .u32 __cudaparm__Z16inverseCNDKernelPfS_j_pathN;
	.loc	16	295	0
$LBB1__Z16inverseCNDKernelPfS_j:
	ld.param.u32 	%r1, [__cudaparm__Z16inverseCNDKernelPfS_j_pathN];	// id:188 __cudaparm__Z16inverseCNDKernelPfS_j_pathN+0x0
	cvt.u32.u16 	%r2, %tid.x;     	// 
	cvt.u32.u16 	%r3, %ctaid.x;   	// 
	cvt.u32.u16 	%r4, %ntid.x;    	// 
	ld.param.u64 	%rd1, [__cudaparm__Z16inverseCNDKernelPfS_j_d_Input];	// id:192 __cudaparm__Z16inverseCNDKernelPfS_j_d_Input+0x0
	mov.u64 	%rd2, 0;             	// 
	setp.eq.u64 	%p1, %rd1, %rd2; 	// 
	@%p1 bra 	$Lt_1_49;           	// 
	.loc	16	303	0
	mul24.lo.u32 	%r5, %r4, %r3;  	// 
	add.u32 	%r6, %r5, %r2;       	// 
	mov.s32 	%r7, %r6;            	// 
	setp.ge.u32 	%p2, %r6, %r1;   	// 
	@%p2 bra 	$Lt_1_62;           	// 
	cvt.u32.u16 	%r8, %nctaid.x;  	// 
	mul24.lo.u32 	%r9, %r4, %r8;  	// 
	cvt.u64.u32 	%rd3, %r6;       	// 
	cvt.s64.u32 	%rd4, %r9;       	// 
	mul.lo.u64 	%rd5, %rd3, 4;    	// 
	mul.lo.u64 	%rd6, %rd4, 4;    	// 
	add.u64 	%rd7, %rd5, %rd1;    	// 
	ld.param.u64 	%rd8, [__cudaparm__Z16inverseCNDKernelPfS_j_d_Output];	// id:194 __cudaparm__Z16inverseCNDKernelPfS_j_d_Output+0x0
	add.u64 	%rd9, %rd8, %rd5;    	// 
$Lt_1_52:
 //<loop> Loop body line 304
	.loc	16	304	0
	ld.global.f32 	%f1, [%rd7+0]; 	// id:195
	.loc	16	305	0
	mov.f32 	%f2, 0f3f800000;     	// 1
	set.ge.u32.f32 	%r10, %f1, %f2;	// 
	neg.s32 	%r11, %r10;          	// 
	mov.f32 	%f3, 0f00000000;     	// 0
	set.le.u32.f32 	%r12, %f1, %f3;	// 
	neg.s32 	%r13, %r12;          	// 
	or.b32 	%r14, %r11, %r13;     	// 
	mov.u32 	%r15, 0;             	// 
	setp.eq.s32 	%p3, %r14, %r15; 	// 
	@%p3 bra 	$Lt_1_53;           	// 
 //<loop> Part of loop body line 304, head labeled $Lt_1_52
	mov.f32 	%f4, 0f7fffffff;     	// nan
	bra.uni 	$Lt_1_3;             	// 
$Lt_1_53:
 //<loop> Part of loop body line 304, head labeled $Lt_1_52
	.loc	16	126	0
	mov.f32 	%f5, 0fbf000000;     	// -0.5
	add.f32 	%f6, %f1, %f5;       	// 
	abs.f32 	%f7, %f6;            	// 
	mov.f32 	%f8, 0f3ed70a3d;     	// 0.42
	setp.lt.f32 	%p4, %f7, %f8;   	// 
	@!%p4 bra 	$Lt_1_56;          	// 
 //<loop> Part of loop body line 304, head labeled $Lt_1_52
	.loc	20	1371	0
	mul.f32 	%f9, %f6, %f6;       	// 
	mov.f32 	%f10, 0f40206c99;    	// 2.50663
	mov.f32 	%f11, 0fc194eb85;    	// -18.615
	mov.f32 	%f12, 0f42259096;    	// 41.3912
	mov.f32 	%f13, 0fc1cb874b;    	// -25.4411
	mad.f32 	%f14, %f9, %f13, %f12;	// 
	mad.f32 	%f15, %f14, %f9, %f11;	// 
	mad.f32 	%f16, %f15, %f9, %f10;	// 
	mul.f32 	%f17, %f6, %f16;     	// 
	mov.f32 	%f18, 0f40485f81;    	// 3.13083
	mul.f32 	%f19, %f9, %f18;     	// 
	mov.f32 	%f20, 0fc1a87f78;    	// -21.0622
	add.f32 	%f21, %f19, %f20;    	// 
	mul.f32 	%f22, %f9, %f21;     	// 
	mov.f32 	%f23, 0f41b8aabd;    	// 23.0834
	add.f32 	%f24, %f22, %f23;    	// 
	mul.f32 	%f25, %f9, %f24;     	// 
	mov.f32 	%f26, 0fc1079380;    	// -8.47351
	add.f32 	%f27, %f25, %f26;    	// 
	mul.f32 	%f28, %f9, %f27;     	// 
	mov.f32 	%f29, 0f3f800000;    	// 1
	add.f32 	%f30, %f28, %f29;    	// 
	mov.f32 	%f31, %f30;          	// 
	.loc	20	1293	0
	abs.f32 	%f32, %f30;          	// 
	mov.f32 	%f33, 0f7e800000;    	// 8.50706e+37
	setp.gt.f32 	%p5, %f32, %f33; 	// 
	@!%p5 bra 	$Lt_1_57;          	// 
 //<loop> Part of loop body line 304, head labeled $Lt_1_52
	.loc	20	1294	0
	mov.f32 	%f34, 0f3e800000;    	// 0.25
	mul.f32 	%f17, %f17, %f34;    	// 
	.loc	20	1295	0
	mov.f32 	%f35, 0f3e800000;    	// 0.25
	mul.f32 	%f31, %f30, %f35;    	// 
$Lt_1_57:
 //<loop> Part of loop body line 304, head labeled $Lt_1_52
	.loc	16	128	0
	div.f32 	%f36, %f17, %f31;    	// 
	bra.uni 	$Lt_1_55;            	// 
$Lt_1_56:
 //<loop> Part of loop body line 304, head labeled $Lt_1_52
	mov.f32 	%f37, 0f00000000;    	// 0
	setp.gt.f32 	%p6, %f6, %f37;  	// 
	@!%p6 bra 	$Lt_1_60;          	// 
 //<loop> Part of loop body line 304, head labeled $Lt_1_52
	.loc	16	131	0
	mov.f32 	%f38, 0f3f800000;    	// 1
	sub.f32 	%f39, %f38, %f1;     	// 
	lg2.f32 	%f40, %f39;          	// 
	mov.f32 	%f41, 0fbf317218;    	// -0.693147
	mul.f32 	%f42, %f40, %f41;    	// 
	lg2.f32 	%f43, %f42;          	// 
	mov.f32 	%f44, 0f3f317218;    	// 0.693147
	mul.f32 	%f36, %f43, %f44;    	// 
	bra.uni 	$Lt_1_59;            	// 
$Lt_1_60:
 //<loop> Part of loop body line 304, head labeled $Lt_1_52
	.loc	16	133	0
	lg2.f32 	%f45, %f1;           	// 
	mov.f32 	%f46, 0fbf317218;    	// -0.693147
	mul.f32 	%f47, %f45, %f46;    	// 
	lg2.f32 	%f48, %f47;          	// 
	mov.f32 	%f49, 0f3f317218;    	// 0.693147
	mul.f32 	%f36, %f48, %f49;    	// 
$Lt_1_59:
 //<loop> Part of loop body line 304, head labeled $Lt_1_52
	.loc	16	135	0
	mov.f32 	%f50, 0f3eacc996;    	// 0.337475
	mov.f32 	%f51, 0f3f79e636;    	// 0.976169
	mov.f32 	%f52, 0f3e24a839;    	// 0.160798
	mov.f32 	%f53, 0f3ce2756c;    	// 0.0276439
	mov.f32 	%f54, 0f3b7bb21f;    	// 0.00384057
	mov.f32 	%f55, 0f39cf3175;    	// 0.00039519
	mov.f32 	%f56, 0f3806f590;    	// 3.21768e-05
	mov.f32 	%f57, 0f349b0eac;    	// 2.88817e-07
	mov.f32 	%f58, 0f34d49e28;    	// 3.96032e-07
	mad.f32 	%f59, %f58, %f36, %f57;	// 
	mad.f32 	%f60, %f36, %f59, %f56;	// 
	mad.f32 	%f61, %f36, %f60, %f55;	// 
	mad.f32 	%f62, %f36, %f61, %f54;	// 
	mad.f32 	%f63, %f36, %f62, %f53;	// 
	mad.f32 	%f64, %f36, %f63, %f52;	// 
	mad.f32 	%f65, %f36, %f64, %f51;	// 
	mad.f32 	%f36, %f36, %f65, %f50;	// 
	neg.f32 	%f66, %f36;          	// 
	mov.f32 	%f67, 0f00000000;    	// 0
	setp.lt.f32 	%p7, %f6, %f67;  	// 
	selp.f32 	%f36, %f66, %f36, %p7;	// 
$Lt_1_55:
 //<loop> Part of loop body line 304, head labeled $Lt_1_52
	mov.f32 	%f4, %f36;           	// 
$Lt_1_3:
 //<loop> Part of loop body line 304, head labeled $Lt_1_52
	.loc	16	305	0
	st.global.f32 	[%rd9+0], %f4; 	// id:196
	add.u32 	%r7, %r9, %r7;       	// 
	add.u64 	%rd9, %rd9, %rd6;    	// 
	add.u64 	%rd7, %rd7, %rd6;    	// 
	setp.lt.u32 	%p8, %r7, %r1;   	// 
	@%p8 bra 	$Lt_1_52;           	// 
	bra.uni 	$Lt_1_62;            	// 
$Lt_1_49:
	.loc	16	311	0
	mul24.lo.u32 	%r16, %r4, %r3; 	// 
	add.u32 	%r17, %r16, %r2;     	// 
	mov.s32 	%r18, %r17;          	// 
	setp.ge.u32 	%p9, %r17, %r1;  	// 
	@%p9 bra 	$Lt_1_62;           	// 
	add.u32 	%r19, %r1, 1;        	// 
	cvt.u64.u32 	%rd10, %r17;     	// 
	cvt.u32.u16 	%r20, %nctaid.x; 	// 
	mul24.lo.u32 	%r21, %r4, %r20;	// 
	cvt.rn.f32.u32 	%f68, %r19;   	// 
	mul.lo.u64 	%rd11, %rd10, 4;  	// 
	cvt.s64.u32 	%rd12, %r21;     	// 
	rcp.f32 	%f69, %f68;          	// 
	ld.param.u64 	%rd13, [__cudaparm__Z16inverseCNDKernelPfS_j_d_Output];	// id:194 __cudaparm__Z16inverseCNDKernelPfS_j_d_Output+0x0
	add.u64 	%rd14, %rd13, %rd11; 	// 
	mul.lo.u64 	%rd15, %rd12, 4;  	// 
$Lt_1_64:
 //<loop> Loop body line 313
	.loc	16	313	0
	add.u32 	%r22, %r18, 1;       	// 
	cvt.rn.f32.u32 	%f70, %r22;   	// 
	mul.f32 	%f71, %f70, %f69;    	// 
	mov.f32 	%f72, 0f3f800000;    	// 1
	set.ge.u32.f32 	%r23, %f71, %f72;	// 
	neg.s32 	%r24, %r23;          	// 
	mov.f32 	%f73, 0f00000000;    	// 0
	set.le.u32.f32 	%r25, %f71, %f73;	// 
	neg.s32 	%r26, %r25;          	// 
	or.b32 	%r27, %r24, %r26;     	// 
	mov.u32 	%r28, 0;             	// 
	setp.eq.s32 	%p10, %r27, %r28;	// 
	@%p10 bra 	$Lt_1_65;          	// 
 //<loop> Part of loop body line 313, head labeled $Lt_1_64
	mov.f32 	%f74, 0f7fffffff;    	// nan
	bra.uni 	$Lt_1_1;             	// 
$Lt_1_65:
 //<loop> Part of loop body line 313, head labeled $Lt_1_64
	.loc	16	126	0
	mov.f32 	%f75, 0fbf000000;    	// -0.5
	add.f32 	%f76, %f71, %f75;    	// 
	abs.f32 	%f77, %f76;          	// 
	mov.f32 	%f78, 0f3ed70a3d;    	// 0.42
	setp.lt.f32 	%p11, %f77, %f78;	// 
	@!%p11 bra 	$Lt_1_68;         	// 
 //<loop> Part of loop body line 313, head labeled $Lt_1_64
	.loc	16	128	0
	mul.f32 	%f79, %f76, %f76;    	// 
	mov.f32 	%f80, 0f3f800000;    	// 1
	mov.f32 	%f81, 0fc1079380;    	// -8.47351
	mov.f32 	%f82, 0f41b8aabd;    	// 23.0834
	mov.f32 	%f83, 0fc1a87f78;    	// -21.0622
	mov.f32 	%f84, 0f40485f81;    	// 3.13083
	mad.f32 	%f85, %f79, %f84, %f83;	// 
	mad.f32 	%f86, %f85, %f79, %f82;	// 
	mad.f32 	%f87, %f86, %f79, %f81;	// 
	mad.f32 	%f88, %f87, %f79, %f80;	// 
	.loc	20	1371	0
	mov.f32 	%f89, 0f40206c99;    	// 2.50663
	mov.f32 	%f90, 0fc194eb85;    	// -18.615
	mov.f32 	%f91, 0f42259096;    	// 41.3912
	mov.f32 	%f92, 0fc1cb874b;    	// -25.4411
	mad.f32 	%f93, %f79, %f92, %f91;	// 
	mad.f32 	%f94, %f93, %f79, %f90;	// 
	mad.f32 	%f95, %f94, %f79, %f89;	// 
	mul.f32 	%f17, %f76, %f95;    	// 
	mov.f32 	%f31, %f88;          	// 
	.loc	20	1293	0
	abs.f32 	%f96, %f88;          	// 
	mov.f32 	%f97, 0f7e800000;    	// 8.50706e+37
	setp.gt.f32 	%p12, %f96, %f97;	// 
	@!%p12 bra 	$Lt_1_69;         	// 
 //<loop> Part of loop body line 313, head labeled $Lt_1_64
	.loc	20	1294	0
	mov.f32 	%f98, 0f3e800000;    	// 0.25
	mul.f32 	%f17, %f17, %f98;    	// 
	.loc	20	1295	0
	mov.f32 	%f99, 0f3e800000;    	// 0.25
	mul.f32 	%f31, %f88, %f99;    	// 
$Lt_1_69:
 //<loop> Part of loop body line 313, head labeled $Lt_1_64
	.loc	16	128	0
	div.f32 	%f36, %f17, %f31;    	// 
	bra.uni 	$Lt_1_67;            	// 
$Lt_1_68:
 //<loop> Part of loop body line 313, head labeled $Lt_1_64
	mov.f32 	%f100, 0f00000000;   	// 0
	setp.gt.f32 	%p13, %f76, %f100;	// 
	@!%p13 bra 	$Lt_1_72;         	// 
 //<loop> Part of loop body line 313, head labeled $Lt_1_64
	.loc	16	131	0
	mov.f32 	%f101, 0f3f800000;   	// 1
	sub.f32 	%f102, %f101, %f71;  	// 
	lg2.f32 	%f103, %f102;        	// 
	mov.f32 	%f104, 0fbf317218;   	// -0.693147
	mul.f32 	%f105, %f103, %f104; 	// 
	lg2.f32 	%f106, %f105;        	// 
	mov.f32 	%f107, 0f3f317218;   	// 0.693147
	mul.f32 	%f36, %f106, %f107;  	// 
	bra.uni 	$Lt_1_71;            	// 
$Lt_1_72:
 //<loop> Part of loop body line 313, head labeled $Lt_1_64
	.loc	16	133	0
	lg2.f32 	%f108, %f71;         	// 
	mov.f32 	%f109, 0fbf317218;   	// -0.693147
	mul.f32 	%f110, %f108, %f109; 	// 
	lg2.f32 	%f111, %f110;        	// 
	mov.f32 	%f112, 0f3f317218;   	// 0.693147
	mul.f32 	%f36, %f111, %f112;  	// 
$Lt_1_71:
 //<loop> Part of loop body line 313, head labeled $Lt_1_64
	.loc	16	135	0
	mov.f32 	%f113, 0f3eacc996;   	// 0.337475
	mov.f32 	%f114, 0f3f79e636;   	// 0.976169
	mov.f32 	%f115, 0f3e24a839;   	// 0.160798
	mov.f32 	%f116, 0f3ce2756c;   	// 0.0276439
	mov.f32 	%f117, 0f3b7bb21f;   	// 0.00384057
	mov.f32 	%f118, 0f39cf3175;   	// 0.00039519
	mov.f32 	%f119, 0f3806f590;   	// 3.21768e-05
	mov.f32 	%f120, 0f349b0eac;   	// 2.88817e-07
	mov.f32 	%f121, 0f34d49e28;   	// 3.96032e-07
	mad.f32 	%f122, %f121, %f36, %f120;	// 
	mad.f32 	%f123, %f36, %f122, %f119;	// 
	mad.f32 	%f124, %f36, %f123, %f118;	// 
	mad.f32 	%f125, %f36, %f124, %f117;	// 
	mad.f32 	%f126, %f36, %f125, %f116;	// 
	mad.f32 	%f127, %f36, %f126, %f115;	// 
	mad.f32 	%f128, %f36, %f127, %f114;	// 
	mad.f32 	%f36, %f36, %f128, %f113;	// 
	neg.f32 	%f129, %f36;         	// 
	mov.f32 	%f130, 0f00000000;   	// 0
	setp.lt.f32 	%p14, %f76, %f130;	// 
	selp.f32 	%f36, %f129, %f36, %p14;	// 
$Lt_1_67:
 //<loop> Part of loop body line 313, head labeled $Lt_1_64
	mov.f32 	%f74, %f36;          	// 
$Lt_1_1:
 //<loop> Part of loop body line 313, head labeled $Lt_1_64
	.loc	16	313	0
	st.global.f32 	[%rd14+0], %f74;	// id:197
	add.u32 	%r18, %r21, %r18;    	// 
	add.u64 	%rd14, %rd14, %rd15; 	// 
	setp.lt.u32 	%p15, %r18, %r1; 	// 
	@%p15 bra 	$Lt_1_64;          	// 
$Lt_1_62:
$Lt_1_48:
	.loc	16	316	0
	exit;                         	// 
$LDWend__Z16inverseCNDKernelPfS_j:
	} // _Z16inverseCNDKernelPfS_j

