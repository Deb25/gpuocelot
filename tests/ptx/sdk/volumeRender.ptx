	.version 1.3
	.target sm_10, map_f64_to_f32
	// compiled with /home/normal/cuda/open64/lib//be
	// nvopencc built on 2008-11-07

	.reg .u32 %ra<17>;
	.reg .u64 %rda<17>;
	.reg .f32 %fa<17>;
	.reg .f64 %fda<17>;
	.reg .u32 %rv<5>;
	.reg .u64 %rdv<5>;
	.reg .f32 %fv<5>;
	.reg .f64 %fdv<5>;


	//-----------------------------------------------------------
	// Compiling volumeRender.cpp3.i (/tmp/ccBI#.LcBI1D)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"<command-line>"
	.file	2	"volumeRender.cudafe2.gpu"
	.file	3	"volumeRender_kernel.cu"
	.file	4	"/usr/lib/gcc/x86_64-linux-gnu/4.2.4/include/stddef.h"
	.file	5	"/home/normal/cuda/bin/../include/crt/device_runtime.h"
	.file	6	"/home/normal/cuda/bin/../include/host_defines.h"
	.file	7	"/home/normal/cuda/bin/../include/builtin_types.h"
	.file	8	"/home/normal/cuda/bin/../include/device_types.h"
	.file	9	"/home/normal/cuda/bin/../include/driver_types.h"
	.file	10	"/home/normal/cuda/bin/../include/texture_types.h"
	.file	11	"/home/normal/cuda/bin/../include/vector_types.h"
	.file	12	"/home/normal/cuda/bin/../include/device_launch_parameters.h"
	.file	13	"/home/normal/cuda/bin/../include/crt/storage_class.h"
	.file	14	"/usr/include/bits/types.h"
	.file	15	"/usr/include/time.h"
	.file	16	"/home/normal/cuda/bin/../include/common_functions.h"
	.file	17	"/home/normal/cuda/bin/../include/crt/func_macro.h"
	.file	18	"/home/normal/cuda/bin/../include/math_functions.h"
	.file	19	"/home/normal/cuda/bin/../include/device_functions.h"
	.file	20	"/home/normal/cuda/bin/../include/math_constants.h"
	.file	21	"/home/normal/cuda/bin/../include/sm_11_atomic_functions.h"
	.file	22	"/home/normal/cuda/bin/../include/sm_12_atomic_functions.h"
	.file	23	"/home/normal/cuda/bin/../include/sm_13_double_functions.h"
	.file	24	"/home/normal/cuda/bin/../include/texture_fetch_functions.h"
	.file	25	"/home/normal/cuda/bin/../include/math_functions_dbl_ptx1.h"

	.tex .u64 tex;
	.tex .u64 transferTex;
	.const .align 16 .b8 c_invViewMatrix[48];

	.entry _Z8d_renderPjjjffff
	{
	.reg .u16 %rh<4>;
	.reg .u32 %r<37>;
	.reg .u64 %rd<6>;
	.reg .f32 %f<159>;
	.reg .pred %p<12>;
	.param .u64 __cudaparm__Z8d_renderPjjjffff_d_output;
	.param .u32 __cudaparm__Z8d_renderPjjjffff_imageW;
	.param .u32 __cudaparm__Z8d_renderPjjjffff_imageH;
	.param .f32 __cudaparm__Z8d_renderPjjjffff_density;
	.param .f32 __cudaparm__Z8d_renderPjjjffff_brightness;
	.param .f32 __cudaparm__Z8d_renderPjjjffff_transferOffset;
	.param .f32 __cudaparm__Z8d_renderPjjjffff_transferScale;
	.loc	3	109	0
$LBB1__Z8d_renderPjjjffff:
	.loc	19	1371	0
	cvt.u32.u16 	%r1, %ctaid.x;   	// 
	cvt.u32.u16 	%r2, %ntid.x;    	// 
	mul24.lo.u32 	%r3, %r1, %r2;  	// 
	cvt.u32.u16 	%r4, %tid.x;     	// 
	add.u32 	%r5, %r4, %r3;       	// 
	cvt.rn.f32.u32 	%f1, %r5;     	// 
	ld.param.u32 	%r6, [__cudaparm__Z8d_renderPjjjffff_imageW];	// id:1143 __cudaparm__Z8d_renderPjjjffff_imageW+0x0
	cvt.rn.f32.u32 	%f2, %r6;     	// 
	mov.f32 	%f3, %f2;            	// 
	.loc	19	1293	0
	abs.f32 	%f4, %f2;            	// 
	mov.f32 	%f5, 0f7e800000;     	// 8.50706e+37
	setp.gt.f32 	%p1, %f4, %f5;   	// 
	@!%p1 bra 	$Lt_0_34;          	// 
	.loc	19	1294	0
	mov.f32 	%f6, 0f3e800000;     	// 0.25
	mul.f32 	%f1, %f1, %f6;       	// 
	.loc	19	1295	0
	mov.f32 	%f7, 0f3e800000;     	// 0.25
	mul.f32 	%f3, %f2, %f7;       	// 
$Lt_0_34:
	.loc	3	119	0
	div.f32 	%f8, %f1, %f3;       	// 
	add.f32 	%f9, %f8, %f8;       	// 
	mov.f32 	%f10, 0fbf800000;    	// -1
	add.f32 	%f11, %f9, %f10;     	// 
	.loc	19	1371	0
	cvt.u32.u16 	%r7, %ctaid.y;   	// 
	cvt.u32.u16 	%r8, %ntid.y;    	// 
	mul24.lo.u32 	%r9, %r7, %r8;  	// 
	cvt.u32.u16 	%r10, %tid.y;    	// 
	add.u32 	%r11, %r10, %r9;     	// 
	cvt.rn.f32.u32 	%f1, %r11;    	// 
	ld.param.u32 	%r12, [__cudaparm__Z8d_renderPjjjffff_imageH];	// id:1142 __cudaparm__Z8d_renderPjjjffff_imageH+0x0
	cvt.rn.f32.u32 	%f12, %r12;   	// 
	mov.f32 	%f3, %f12;           	// 
	.loc	19	1293	0
	abs.f32 	%f13, %f12;          	// 
	mov.f32 	%f14, 0f7e800000;    	// 8.50706e+37
	setp.gt.f32 	%p2, %f13, %f14; 	// 
	@!%p2 bra 	$Lt_0_36;          	// 
	.loc	19	1294	0
	mov.f32 	%f15, 0f3e800000;    	// 0.25
	mul.f32 	%f1, %f1, %f15;      	// 
	.loc	19	1295	0
	mov.f32 	%f16, 0f3e800000;    	// 0.25
	mul.f32 	%f3, %f12, %f16;     	// 
$Lt_0_36:
	.loc	19	1371	0
	div.f32 	%f17, %f1, %f3;      	// 
	mul.f32 	%f18, %f11, %f11;    	// 
	add.f32 	%f19, %f17, %f17;    	// 
	mov.f32 	%f20, 0fbf800000;    	// -1
	add.f32 	%f21, %f19, %f20;    	// 
	mul.f32 	%f22, %f21, %f21;    	// 
	add.f32 	%f23, %f18, %f22;    	// 
	mov.f32 	%f24, 0f40800000;    	// 4
	add.f32 	%f25, %f23, %f24;    	// 
	rsqrt.f32 	%f26, %f25;        	// 
	mul.f32 	%f27, %f26, %f11;    	// 
	mul.f32 	%f28, %f21, %f26;    	// 
	mov.f32 	%f29, 0fc0000000;    	// -2
	mul.f32 	%f30, %f26, %f29;    	// 
	ld.const.f32 	%f31, [c_invViewMatrix+0];	// id:1150 c_invViewMatrix+0x0
	mul.f32 	%f32, %f31, %f27;    	// 
	ld.const.f32 	%f33, [c_invViewMatrix+4];	// id:1151 c_invViewMatrix+0x4
	mul.f32 	%f34, %f33, %f28;    	// 
	ld.const.f32 	%f35, [c_invViewMatrix+8];	// id:1152 c_invViewMatrix+0x8
	mul.f32 	%f36, %f35, %f30;    	// 
	add.f32 	%f37, %f32, %f34;    	// 
	add.f32 	%f38, %f36, %f37;    	// 
	mov.f32 	%f39, %f38;          	// 
	.loc	19	1293	0
	abs.f32 	%f40, %f38;          	// 
	mov.f32 	%f41, 0f7e800000;    	// 8.50706e+37
	setp.gt.f32 	%p3, %f40, %f41; 	// 
	@!%p3 bra 	$Lt_0_39;          	// 
	.loc	19	1295	0
	mov.f32 	%f42, 0f3e800000;    	// 0.25
	mul.f32 	%f39, %f38, %f42;    	// 
	mov.f32 	%f43, 0f3e800000;    	// 0.25
	bra.uni 	$Lt_0_38;            	// 
$Lt_0_39:
	mov.f32 	%f43, 0f3f800000;    	// 1
$Lt_0_38:
	.loc	3	56	0
	div.f32 	%f44, %f43, %f39;    	// 
	.loc	19	1371	0
	ld.const.f32 	%f45, [c_invViewMatrix+16];	// id:1153 c_invViewMatrix+0x10
	mul.f32 	%f46, %f45, %f27;    	// 
	ld.const.f32 	%f47, [c_invViewMatrix+20];	// id:1154 c_invViewMatrix+0x14
	mul.f32 	%f48, %f47, %f28;    	// 
	ld.const.f32 	%f49, [c_invViewMatrix+24];	// id:1155 c_invViewMatrix+0x18
	mul.f32 	%f50, %f49, %f30;    	// 
	add.f32 	%f51, %f46, %f48;    	// 
	add.f32 	%f52, %f50, %f51;    	// 
	mov.f32 	%f39, %f52;          	// 
	.loc	19	1293	0
	abs.f32 	%f53, %f52;          	// 
	mov.f32 	%f54, 0f7e800000;    	// 8.50706e+37
	setp.gt.f32 	%p4, %f53, %f54; 	// 
	@!%p4 bra 	$Lt_0_41;          	// 
	.loc	19	1295	0
	mov.f32 	%f55, 0f3e800000;    	// 0.25
	mul.f32 	%f39, %f52, %f55;    	// 
	mov.f32 	%f43, 0f3e800000;    	// 0.25
	bra.uni 	$Lt_0_40;            	// 
$Lt_0_41:
	mov.f32 	%f43, 0f3f800000;    	// 1
$Lt_0_40:
	.loc	3	56	0
	div.f32 	%f56, %f43, %f39;    	// 
	.loc	19	1371	0
	ld.const.f32 	%f57, [c_invViewMatrix+32];	// id:1156 c_invViewMatrix+0x20
	mul.f32 	%f58, %f57, %f27;    	// 
	ld.const.f32 	%f59, [c_invViewMatrix+36];	// id:1157 c_invViewMatrix+0x24
	mul.f32 	%f60, %f59, %f28;    	// 
	ld.const.f32 	%f61, [c_invViewMatrix+40];	// id:1158 c_invViewMatrix+0x28
	mul.f32 	%f62, %f61, %f30;    	// 
	add.f32 	%f63, %f58, %f60;    	// 
	add.f32 	%f64, %f62, %f63;    	// 
	mov.f32 	%f39, %f64;          	// 
	.loc	19	1293	0
	abs.f32 	%f65, %f64;          	// 
	mov.f32 	%f66, 0f7e800000;    	// 8.50706e+37
	setp.gt.f32 	%p5, %f65, %f66; 	// 
	@!%p5 bra 	$Lt_0_43;          	// 
	.loc	19	1295	0
	mov.f32 	%f67, 0f3e800000;    	// 0.25
	mul.f32 	%f39, %f64, %f67;    	// 
	mov.f32 	%f43, 0f3e800000;    	// 0.25
	bra.uni 	$Lt_0_42;            	// 
$Lt_0_43:
	mov.f32 	%f43, 0f3f800000;    	// 1
$Lt_0_42:
	.loc	3	68	0
	div.f32 	%f68, %f43, %f39;    	// 
	ld.const.f32 	%f69, [c_invViewMatrix+12];	// id:1140 c_invViewMatrix+0xc
	mov.f32 	%f70, 0f3f800000;    	// 1
	sub.f32 	%f71, %f70, %f69;    	// 
	mov.f32 	%f72, 0fbf800000;    	// -1
	sub.f32 	%f73, %f72, %f69;    	// 
	ld.const.f32 	%f74, [c_invViewMatrix+28];	// id:1139 c_invViewMatrix+0x1c
	mov.f32 	%f75, 0f3f800000;    	// 1
	sub.f32 	%f76, %f75, %f74;    	// 
	mov.f32 	%f77, 0fbf800000;    	// -1
	sub.f32 	%f78, %f77, %f74;    	// 
	ld.const.f32 	%f79, [c_invViewMatrix+44];	// id:1138 c_invViewMatrix+0x2c
	mov.f32 	%f80, 0f3f800000;    	// 1
	sub.f32 	%f81, %f80, %f79;    	// 
	mov.f32 	%f82, 0fbf800000;    	// -1
	sub.f32 	%f83, %f82, %f79;    	// 
	mul.f32 	%f84, %f71, %f44;    	// 
	mul.f32 	%f85, %f73, %f44;    	// 
	mul.f32 	%f86, %f76, %f56;    	// 
	mul.f32 	%f87, %f78, %f56;    	// 
	mul.f32 	%f88, %f68, %f81;    	// 
	mul.f32 	%f89, %f68, %f83;    	// 
	min.f32 	%f90, %f84, %f85;    	// 
	min.f32 	%f91, %f86, %f87;    	// 
	min.f32 	%f92, %f88, %f89;    	// 
	max.f32 	%f93, %f90, %f91;    	// 
	max.f32 	%f94, %f90, %f92;    	// 
	max.f32 	%f95, %f93, %f94;    	// 
	mov.f32 	%f96, %f95;          	// 
	.loc	3	130	0
	max.f32 	%f97, %f84, %f85;    	// 
	max.f32 	%f98, %f86, %f87;    	// 
	max.f32 	%f99, %f88, %f89;    	// 
	min.f32 	%f100, %f97, %f98;   	// 
	min.f32 	%f101, %f97, %f99;   	// 
	min.f32 	%f102, %f100, %f101; 	// 
	setp.lt.f32 	%p6, %f95, %f102;	// 
	@%p6 bra 	$Lt_0_44;           	// 
	bra.uni 	$LBB25__Z8d_renderPjjjffff;	// 
$Lt_0_44:
	.loc	3	131	0
	mov.f32 	%f103, 0f00000000;   	// 0
	setp.lt.f32 	%p7, %f95, %f103;	// 
	@!%p7 bra 	$Lt_0_46;          	// 
	mov.f32 	%f96, 0f00000000;    	// 0
$Lt_0_46:
	.loc	3	136	0
	mov.f32 	%f104, %f102;        	// 
	ld.param.f32 	%f105, [__cudaparm__Z8d_renderPjjjffff_density];	// id:1127 __cudaparm__Z8d_renderPjjjffff_density+0x0
	ld.param.f32 	%f106, [__cudaparm__Z8d_renderPjjjffff_transferOffset];	// id:1128 __cudaparm__Z8d_renderPjjjffff_transferOffset+0x0
	ld.param.f32 	%f107, [__cudaparm__Z8d_renderPjjjffff_transferScale];	// id:1129 __cudaparm__Z8d_renderPjjjffff_transferScale+0x0
	mov.s16 	%rh1, 0;             	// 
	mov.f32 	%f108, 0f00000000;   	// 0
	mov.f32 	%f109, 0f00000000;   	// 0
	mov.f32 	%f110, 0f00000000;   	// 0
	mov.f32 	%f111, 0f00000000;   	// 0
$Lt_0_50:
 //<loop> Loop body line 136, nesting depth: 1, estimated iterations: 500
	mov.f32 	%f112, 0f3f000000;   	// 0.5
	mad.f32 	%f113, %f104, %f38, %f69;	// 
	mov.f32 	%f114, 0f3f000000;   	// 0.5
	mad.f32 	%f115, %f113, %f114, %f112;	// 
	mov.f32 	%f116, 0f3f000000;   	// 0.5
	mad.f32 	%f117, %f104, %f52, %f74;	// 
	mov.f32 	%f118, 0f3f000000;   	// 0.5
	mad.f32 	%f119, %f117, %f118, %f116;	// 
	mov.f32 	%f120, 0f3f000000;   	// 0.5
	mad.f32 	%f121, %f104, %f64, %f79;	// 
	mov.f32 	%f122, 0f3f000000;   	// 0.5
	mad.f32 	%f123, %f121, %f122, %f120;	// 
	mov.f32 	%f124, 0f00000000;   	// 0
	tex.3d.v4.u32.f32 {%r13,%r14,%r15,%r16},[tex,{%f115,%f119,%f123,%f124}];
	.loc	3	142	0
	mov.s32 	%r17, %r13;          	// 
	mov.b32 	%f125, %r17;         	// 
	sub.f32 	%f126, %f125, %f106; 	// 
	mul.f32 	%f127, %f107, %f126; 	// 
	mov.f32 	%f128, 0f00000000;   	// 0
	mov.f32 	%f129, 0f00000000;   	// 0
	mov.f32 	%f130, 0f00000000;   	// 0
	tex.1d.v4.f32.f32 {%f131,%f132,%f133,%f134},[transferTex,{%f127,%f128,%f129,%f130}];
	.loc	3	145	0
	mov.f32 	%f135, %f131;        	// 
	mov.f32 	%f136, %f132;        	// 
	mov.f32 	%f137, %f133;        	// 
	mov.f32 	%f138, %f134;        	// 
	.loc	3	148	0
	mul.f32 	%f139, %f138, %f105; 	// 
	sub.f32 	%f140, %f135, %f111; 	// 
	mad.f32 	%f111, %f139, %f140, %f111;	// 
	sub.f32 	%f141, %f136, %f110; 	// 
	mad.f32 	%f110, %f139, %f141, %f110;	// 
	sub.f32 	%f142, %f137, %f109; 	// 
	mad.f32 	%f109, %f139, %f142, %f109;	// 
	sub.f32 	%f143, %f138, %f108; 	// 
	mad.f32 	%f108, %f139, %f143, %f108;	// 
	.loc	3	150	0
	mov.f32 	%f144, 0fbc23d70a;   	// -0.01
	add.f32 	%f104, %f104, %f144; 	// 
	setp.lt.f32 	%p8, %f104, %f96;	// 
	@!%p8 bra 	$Lt_0_51;          	// 
	bra.uni 	$Lt_0_1;             	// 
$Lt_0_51:
 //<loop> Part of loop body line 136, head labeled $Lt_0_50
	.loc	3	137	0
	add.s16 	%rh1, %rh1, 1;       	// 
	mov.u16 	%rh2, 500;           	// 
	setp.ne.s16 	%p9, %rh1, %rh2; 	// 
	@%p9 bra 	$Lt_0_50;           	// 
$Lt_0_1:
	.loc	3	153	0
	ld.param.f32 	%f145, [__cudaparm__Z8d_renderPjjjffff_brightness];	// id:1126 __cudaparm__Z8d_renderPjjjffff_brightness+0x0
	mul.f32 	%f111, %f145, %f111; 	// 
	mul.f32 	%f110, %f145, %f110; 	// 
	mul.f32 	%f109, %f145, %f109; 	// 
	mul.f32 	%f108, %f145, %f108; 	// 
	set.lt.u32.u32 	%r18, %r5, %r6;	// 
	neg.s32 	%r19, %r18;          	// 
	set.lt.u32.u32 	%r20, %r11, %r12;	// 
	neg.s32 	%r21, %r20;          	// 
	and.b32 	%r22, %r19, %r21;    	// 
	mov.u32 	%r23, 0;             	// 
	setp.eq.s32 	%p10, %r22, %r23;	// 
	@%p10 bra 	$LBB25__Z8d_renderPjjjffff;	// 
	.loc	3	158	0
	cvt.sat.f32.f32 	%f146, %f111;	// 
	mov.f32 	%f147, 0f437f0000;   	// 255
	mul.f32 	%f148, %f146, %f147; 	// 
	cvt.rzi.u32.f32 	%r24, %f148; 	// 
	cvt.sat.f32.f32 	%f149, %f110;	// 
	mov.f32 	%f150, 0f437f0000;   	// 255
	mul.f32 	%f151, %f149, %f150; 	// 
	cvt.rzi.u32.f32 	%r25, %f151; 	// 
	shl.b32 	%r26, %r25, 8;       	// 
	or.b32 	%r27, %r24, %r26;     	// 
	cvt.sat.f32.f32 	%f152, %f108;	// 
	mov.f32 	%f153, 0f437f0000;   	// 255
	mul.f32 	%f154, %f152, %f153; 	// 
	cvt.rzi.u32.f32 	%r28, %f154; 	// 
	shl.b32 	%r29, %r28, 24;      	// 
	cvt.sat.f32.f32 	%f155, %f109;	// 
	mov.f32 	%f156, 0f437f0000;   	// 255
	mul.f32 	%f157, %f155, %f156; 	// 
	cvt.rzi.u32.f32 	%r30, %f157; 	// 
	shl.b32 	%r31, %r30, 16;      	// 
	or.b32 	%r32, %r29, %r31;     	// 
	or.b32 	%r33, %r27, %r32;     	// 
	ld.param.u64 	%rd1, [__cudaparm__Z8d_renderPjjjffff_d_output];	// id:1159 __cudaparm__Z8d_renderPjjjffff_d_output+0x0
	mul24.lo.u32 	%r34, %r11, %r6;	// 
	add.u32 	%r35, %r5, %r34;     	// 
	cvt.u64.u32 	%rd2, %r35;      	// 
	mul.lo.u64 	%rd3, %rd2, 4;    	// 
	add.u64 	%rd4, %rd1, %rd3;    	// 
	st.global.u32 	[%rd4+0], %r33;	// id:1160
$LBB25__Z8d_renderPjjjffff:
	.loc	3	160	0
	exit;                         	// 
$LDWend__Z8d_renderPjjjffff:
	} // _Z8d_renderPjjjffff

