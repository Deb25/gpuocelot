	.version 1.3
	.target sm_10, map_f64_to_f32
	// compiled with /home/normal/cuda/open64/lib//be
	// nvopencc built on 2008-11-07

	.reg .u32 %ra<17>;
	.reg .u64 %rda<17>;
	.reg .f32 %fa<17>;
	.reg .f64 %fda<17>;
	.reg .u32 %rv<5>;
	.reg .u64 %rdv<5>;
	.reg .f32 %fv<5>;
	.reg .f64 %fdv<5>;


	//-----------------------------------------------------------
	// Compiling binomialOptions_SM10.cpp3.i (/tmp/ccBI#.qIaoSP)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"<command-line>"
	.file	2	"binomialOptions_SM10.cudafe2.gpu"
	.file	3	"binomialOptions_kernel.cuh"
	.file	4	"/usr/lib/gcc/x86_64-linux-gnu/4.2.4/include/stddef.h"
	.file	5	"/home/normal/cuda/bin/../include/crt/device_runtime.h"
	.file	6	"/home/normal/cuda/bin/../include/host_defines.h"
	.file	7	"/home/normal/cuda/bin/../include/builtin_types.h"
	.file	8	"/home/normal/cuda/bin/../include/device_types.h"
	.file	9	"/home/normal/cuda/bin/../include/driver_types.h"
	.file	10	"/home/normal/cuda/bin/../include/texture_types.h"
	.file	11	"/home/normal/cuda/bin/../include/vector_types.h"
	.file	12	"/home/normal/cuda/bin/../include/device_launch_parameters.h"
	.file	13	"/home/normal/cuda/bin/../include/crt/storage_class.h"
	.file	14	"/usr/include/bits/types.h"
	.file	15	"/usr/include/time.h"
	.file	16	"realtype.h"
	.file	17	"/home/normal/cuda/bin/../include/common_functions.h"
	.file	18	"/home/normal/cuda/bin/../include/crt/func_macro.h"
	.file	19	"/home/normal/cuda/bin/../include/math_functions.h"
	.file	20	"/home/normal/cuda/bin/../include/device_functions.h"
	.file	21	"/home/normal/cuda/bin/../include/math_constants.h"
	.file	22	"/home/normal/cuda/bin/../include/sm_11_atomic_functions.h"
	.file	23	"/home/normal/cuda/bin/../include/sm_12_atomic_functions.h"
	.file	24	"/home/normal/cuda/bin/../include/sm_13_double_functions.h"
	.file	25	"/home/normal/cuda/bin/../include/texture_fetch_functions.h"
	.file	26	"/home/normal/cuda/bin/../include/math_functions_dbl_ptx1.h"

	.const .align 4 .b8 d_OptionData[20480];
	.global .align 4 .b8 d_CallValue[4096];
	.global .align 4 .b8 d_CallBuffer[8454144];

	.entry _Z21binomialOptionsKernelv
	{
	.reg .u32 %r<42>;
	.reg .u64 %rd<40>;
	.reg .f32 %f<47>;
	.reg .pred %p<17>;
	.shared .align 4 .b8 __cuda_callB8478720[1024];
	.shared .align 4 .b8 __cuda_callA8479744[1024];
	.loc	3	94	0
$LBB1__Z21binomialOptionsKernelv:
	.loc	3	108	0
	cvt.s32.u16 	%r1, %tid.x;     	// 
	mov.s32 	%r2, %r1;            	// 
	cvt.u32.u16 	%r3, %ctaid.x;   	// 
	mov.u32 	%r4, 2048;           	// 
	setp.gt.s32 	%p1, %r1, %r4;   	// 
	mov.u64 	%rd1, d_CallBuffer;  	// 
	@%p1 bra 	$Lt_0_66;           	// 
	mov.s32 	%r5, 2304;           	// 
	sub.s32 	%r6, %r5, %r1;       	// 
	shr.s32 	%r7, %r6, 31;        	// 
	mov.s32 	%r8, 255;            	// 
	and.b32 	%r9, %r7, %r8;       	// 
	add.s32 	%r10, %r9, %r6;      	// 
	shr.s32 	%r11, %r10, 8;       	// 
	mul.lo.u32 	%r12, %r3, 2064;  	// 
	cvt.u64.u32 	%rd2, %r3;       	// 
	cvt.u64.s32 	%rd3, %r1;       	// 
	cvt.u64.u32 	%rd4, %r12;      	// 
	mul.lo.u64 	%rd5, %rd2, 20;   	// 
	mul.lo.u64 	%rd6, %rd3, 4;    	// 
	mul.lo.u64 	%rd7, %rd4, 4;    	// 
	mov.u64 	%rd8, d_OptionData;  	// 
	add.u64 	%rd9, %rd5, %rd8;    	// 
	ld.const.f32 	%f1, [%rd9+0];  	// id:142 d_OptionData+0x0
	ld.const.f32 	%f2, [%rd9+8];  	// id:143 d_OptionData+0x0
	ld.const.f32 	%f3, [%rd9+4];  	// id:144 d_OptionData+0x0
	add.s64 	%rd10, %rd7, %rd6;   	// 
	add.u64 	%rd11, %rd1, %rd10;  	// 
	mov.s32 	%r13, %r11;          	// 
$Lt_0_42:
 //<loop> Loop body line 108, nesting depth: 1, estimated iterations: unknown
	.loc	3	109	0
	cvt.rn.f32.s32 	%f4, %r2;     	// 
	add.f32 	%f5, %f4, %f4;       	// 
	mov.f32 	%f6, 0fc5000000;     	// -2048
	add.f32 	%f7, %f5, %f6;       	// 
	mul.f32 	%f8, %f7, %f2;       	// 
	mov.f32 	%f9, 0f3fb8aa3b;     	// 1.4427
	mul.f32 	%f10, %f8, %f9;      	// 
	cvt.rzi.f32.f32 	%f11, %f10;  	// 
	mov.f32 	%f12, 0f7f800000;    	// ((1.0F)/(0.0F))
	mov.f32 	%f13, 0f00000000;    	// 0
	ex2.f32 	%f14, %f11;          	// 
	mov.f32 	%f15, 0f3f317200;    	// 0.693146
	mul.f32 	%f16, %f11, %f15;    	// 
	sub.f32 	%f17, %f8, %f16;     	// 
	mov.f32 	%f18, 0f35bfbe8e;    	// 1.42861e-06
	mul.f32 	%f19, %f11, %f18;    	// 
	sub.f32 	%f20, %f17, %f19;    	// 
	mov.f32 	%f21, 0f3fb8aa3b;    	// 1.4427
	mul.f32 	%f22, %f20, %f21;    	// 
	ex2.f32 	%f23, %f22;          	// 
	mul.f32 	%f24, %f14, %f23;    	// 
	mov.f32 	%f25, 0fc2d20000;    	// -105
	setp.lt.f32 	%p2, %f8, %f25;  	// 
	selp.f32 	%f26, %f13, %f24, %p2;	// 
	mov.f32 	%f27, 0f42d20000;    	// 105
	setp.gt.f32 	%p3, %f8, %f27;  	// 
	selp.f32 	%f28, %f12, %f26, %p3;	// 
	mul.f32 	%f29, %f1, %f28;     	// 
	sub.f32 	%f30, %f29, %f3;     	// 
	mov.f32 	%f31, 0f00000000;    	// 0
	max.f32 	%f32, %f30, %f31;    	// 
	st.global.f32 	[%rd11+0], %f32;	// id:145 d_CallBuffer+0x0
	add.s32 	%r2, %r2, 256;       	// 
	add.u64 	%rd11, %rd11, 1024;  	// 
	mov.u32 	%r14, 2048;          	// 
	setp.le.s32 	%p4, %r2, %r14;  	// 
	@%p4 bra 	$Lt_0_42;           	// 
	bra.uni 	$Lt_0_40;            	// 
$Lt_0_66:
	mul.lo.u32 	%r15, %r3, 2064;  	// 
	cvt.u64.u32 	%rd2, %r3;       	// 
	cvt.u64.u32 	%rd12, %r15;     	// 
	mul.lo.u64 	%rd13, %rd2, 20;  	// 
	mul.lo.u64 	%rd7, %rd12, 4;   	// 
	mov.u64 	%rd14, d_OptionData; 	// 
	add.u64 	%rd9, %rd13, %rd14;  	// 
$Lt_0_40:
	add.u64 	%rd15, %rd7, %rd1;   	// 
	ld.const.f32 	%f33, [%rd9+16];	// id:146 d_OptionData+0x0
	ld.const.f32 	%f34, [%rd9+12];	// id:147 d_OptionData+0x0
	mov.s32 	%r16, 2048;          	// 
	mov.u64 	%rd16, __cuda_callB8478720;	// 
	mov.u64 	%rd17, __cuda_callA8479744;	// 
$Lt_0_46:
 //<loop> Loop body line 109, nesting depth: 1, iterations: 64
	mov.u32 	%r17, 0;             	// 
	setp.le.s32 	%p5, %r16, %r17; 	// 
	@%p5 bra 	$Lt_0_47;           	// 
 //<loop> Part of loop body line 109, head labeled $Lt_0_46
	add.s32 	%r18, %r16, 223;     	// 
	mov.s32 	%r19, 613566757;     	// 
	mov.s32 	%r20, 0;             	// 
	setp.lt.s32 	%p6, %r18, %r20; 	// 
	abs.s32 	%r21, %r18;          	// 
	mul.hi.u32 	%r22, %r21, %r19; 	// 
	sub.u32 	%r23, %r21, %r22;    	// 
	shr.u32 	%r24, %r23, 1;       	// 
	add.u32 	%r25, %r24, %r22;    	// 
	shr.s32 	%r26, %r25, 7;       	// 
	@%p6 sub.s32 	%r26, %r20, %r26;	// 
	mov.s32 	%r27, %r26;          	// 
	mov.s32 	%r28, 0;             	// 
 //<loop> Part of loop body line 109, head labeled $Lt_0_46
	mov.s32 	%r29, %r27;          	// 
$Lt_0_49:
 //<loop> Loop body line 109, nesting depth: 2, estimated iterations: unknown
	.loc	3	120	0
	bar.sync 	0;                  	// 
	sub.s32 	%r30, %r16, %r28;    	// 
	mov.s32 	%r31, 255;           	// 
	min.s32 	%r32, %r30, %r31;    	// 
	setp.lt.s32 	%p7, %r32, %r1;  	// 
	@%p7 bra 	$Lt_0_50;           	// 
 //<loop> Part of loop body line 109, head labeled $Lt_0_49
	.loc	3	122	0
	add.s32 	%r33, %r1, %r28;     	// 
	cvt.s64.s32 	%rd18, %r33;     	// 
	mul.lo.u64 	%rd19, %rd18, 4;  	// 
	add.u64 	%rd20, %rd15, %rd19; 	// 
	ld.global.f32 	%f35, [%rd20+0];	// id:148 d_CallBuffer+0x0
	cvt.u64.s32 	%rd21, %r1;      	// 
	mul.lo.u64 	%rd22, %rd21, 4;  	// 
	add.u64 	%rd23, %rd17, %rd22; 	// 
	st.shared.f32 	[%rd23+0], %f35;	// id:149 __cuda_callA8479744+0x0
$Lt_0_50:
 //<loop> Part of loop body line 109, head labeled $Lt_0_49
	.loc	3	125	0
	sub.s32 	%r34, %r32, 1;       	// 
	mov.s32 	%r35, %r34;          	// 
	sub.s32 	%r36, %r32, 32;      	// 
	setp.lt.s32 	%p8, %r34, %r36; 	// 
	@%p8 bra 	$Lt_0_52;           	// 
$Lt_0_54:
 //<loop> Loop body line 125, nesting depth: 3, iterations: 16
	.loc	3	127	0
	bar.sync 	0;                  	// 
	setp.gt.s32 	%p9, %r1, %r35;  	// 
	@%p9 bra 	$Lt_0_55;           	// 
 //<loop> Part of loop body line 125, head labeled $Lt_0_54
	.loc	3	129	0
	cvt.u64.s32 	%rd24, %r1;      	// 
	mul.lo.u64 	%rd6, %rd24, 4;   	// 
	add.u64 	%rd25, %rd6, %rd17;  	// 
	ld.shared.f32 	%f36, [%rd25+4];	// id:151 __cuda_callA8479744+0x0
	mul.f32 	%f37, %f36, %f34;    	// 
	ld.shared.f32 	%f38, [%rd25+0];	// id:150 __cuda_callA8479744+0x0
	mad.f32 	%f39, %f38, %f33, %f37;	// 
	add.u64 	%rd26, %rd6, %rd16;  	// 
	st.shared.f32 	[%rd26+0], %f39;	// id:152 __cuda_callB8478720+0x0
$Lt_0_55:
 //<loop> Part of loop body line 125, head labeled $Lt_0_54
	.loc	3	133	0
	bar.sync 	0;                  	// 
	sub.s32 	%r37, %r35, 1;       	// 
	setp.gt.s32 	%p10, %r1, %r37; 	// 
	@%p10 bra 	$Lt_0_57;          	// 
 //<loop> Part of loop body line 125, head labeled $Lt_0_54
	.loc	3	135	0
	cvt.u64.s32 	%rd27, %r1;      	// 
	mul.lo.u64 	%rd6, %rd27, 4;   	// 
	add.u64 	%rd28, %rd6, %rd16;  	// 
	ld.shared.f32 	%f40, [%rd28+4];	// id:154 __cuda_callB8478720+0x0
	mul.f32 	%f41, %f40, %f34;    	// 
	ld.shared.f32 	%f42, [%rd28+0];	// id:153 __cuda_callB8478720+0x0
	mad.f32 	%f43, %f42, %f33, %f41;	// 
	add.u64 	%rd29, %rd6, %rd17;  	// 
	st.shared.f32 	[%rd29+0], %f43;	// id:155 __cuda_callA8479744+0x0
$Lt_0_57:
 //<loop> Part of loop body line 125, head labeled $Lt_0_54
	.loc	3	136	0
	sub.s32 	%r35, %r35, 2;       	// 
	setp.le.s32 	%p11, %r36, %r35;	// 
	@%p11 bra 	$Lt_0_54;          	// 
$Lt_0_52:
 //<loop> Part of loop body line 109, head labeled $Lt_0_49
	.loc	3	140	0
	bar.sync 	0;                  	// 
	setp.lt.s32 	%p12, %r36, %r1; 	// 
	@%p12 bra 	$Lt_0_60;          	// 
 //<loop> Part of loop body line 109, head labeled $Lt_0_49
	.loc	3	142	0
	cvt.u64.s32 	%rd30, %r1;      	// 
	mul.lo.u64 	%rd31, %rd30, 4;  	// 
	add.u64 	%rd32, %rd17, %rd31; 	// 
	ld.shared.f32 	%f44, [%rd32+0];	// id:156 __cuda_callA8479744+0x0
	add.s32 	%r38, %r1, %r28;     	// 
	cvt.s64.s32 	%rd33, %r38;     	// 
	mul.lo.u64 	%rd34, %rd33, 4;  	// 
	add.u64 	%rd35, %rd15, %rd34; 	// 
	st.global.f32 	[%rd35+0], %f44;	// id:157 d_CallBuffer+0x0
$Lt_0_60:
 //<loop> Part of loop body line 109, head labeled $Lt_0_49
	add.s32 	%r28, %r28, 224;     	// 
	setp.lt.s32 	%p13, %r28, %r16;	// 
	@%p13 bra 	$Lt_0_49;          	// 
$Lt_0_47:
 //<loop> Part of loop body line 109, head labeled $Lt_0_46
	sub.s32 	%r16, %r16, 32;      	// 
	mov.u32 	%r39, 0;             	// 
	setp.ne.s32 	%p14, %r16, %r39;	// 
	@%p14 bra 	$Lt_0_46;          	// 
	mov.u32 	%r40, 0;             	// 
	setp.ne.u32 	%p15, %r1, %r40; 	// 
	@%p15 bra 	$Lt_0_64;          	// 
	.loc	3	146	0
	ld.shared.f32 	%f45, [__cuda_callA8479744+0];	// id:158 __cuda_callA8479744+0x0
	mov.u64 	%rd36, d_CallValue;  	// 
	mul.lo.u64 	%rd37, %rd2, 4;   	// 
	add.u64 	%rd38, %rd36, %rd37; 	// 
	st.global.f32 	[%rd38+0], %f45;	// id:159 d_CallValue+0x0
$Lt_0_64:
	.loc	3	147	0
	exit;                         	// 
$LDWend__Z21binomialOptionsKernelv:
	} // _Z21binomialOptionsKernelv

